import cProfile
import pstats
import io

from Calculator import Number, sum_, sub_, mul_, div_
from kate_calc import Calculator

funcs_1 = [sum_, sub_, mul_, div_]
calc_name_1 = 'Calculator'
funcs_2 = [Calculator().add, Calculator().subtract, Calculator().multiply, Calculator().divide]
calc_name_2 = 'kate_calc'
first = ['151651220544150151535135151468',
         '1015165122054415011111111111111110151651220544150151535135151468345516816485435465416',
         '10151651220544150111111111111111101516510151651220544150111111111111111101516512205441501515351351514683455'
         '168164854354654161220544150151535135151468345516816485435465416',
         '110151651220544150111111111111111101516512205441501515351351514683455168164854354654160151651220544150111111'
         '111111111101516512205441501515351351514683455168101516512205441501111111111111111015165122054415015153513515'
         '146834551681648543546541616485435465416',
         '101516512205441501111111111111111015165122054415015153513515146834551681648543546541610151651220544150111111'
         '1111111111015165122054415015153513515146834551681648543546541610151651220544150111111111111111101516512205441'
         '5015153513515146834551681648543546541610151651220544150111111111111111101516512205441501515351351514683455168'
         '16485435465416']
second = ['542415458457584254811111111111',
          '5424154584575842548111111111111111101516153513515146834551681648543546541651220544150',
          '5424542415458457584254811111111111111110151615351351514683455168164854354654165122054415'
          '0154584575842548111111111111111101516153513515146834551681648543546541651220544150',
          '542415458457584254811111111111111110151615351351514683455168164854354654165122054415054241545845754241545845'
          '758425481111111111111111015161535135151468345516816485435465416512205441505842548111111111111111101516153513'
          '515146834551681648543546541651220544150',
          '554241545845758425481111111111111111015161535135151468345516816485435465416512205441505424154584575842548111'
          '111111111111101516153513515146834551654241545845758425481111111111111111015161535135151468345516816485435465'
          '416512205441508164854354654165122054415042415458457584254811111111111111110151615351351514683455168164854354'
          '6541651220544150']
target_file = 'speed_test.txt'
profiler = cProfile.Profile()


def collect_info(file, pr):
    pr.disable()

    s = io.StringIO()
    ps = pstats.Stats(pr, stream=s).sort_stats('tottime')
    ps.print_stats()

    with open(file, 'a+') as f:
        f.write(s.getvalue())


for operation in range(len(funcs_1)):
    with open(target_file, 'a+') as report_file:
        report_file.writelines('--------- {} {} - VS - {} {} function ---------\n\n'.format(calc_name_1,
                                funcs_1[operation].__name__, calc_name_2, funcs_2[operation].__name__, ))
    for number in range(len(first)):
        with open(target_file, 'a+') as report_file:
            report_file.writelines('------ Length of operands: {}, {} ------\n\n'.format(len(first[number]),
                                                                                         len(second[number])))
        profiler.enable()
        result_1 = funcs_1[operation](Number(first[number], 10).convert_to_binary(),
                                      Number(second[number], 10).convert_to_binary())
        collect_info(target_file, profiler)

        profiler.enable()
        result_2 = funcs_2[operation](first[number], second[number], 10)
        collect_info(target_file, profiler)
